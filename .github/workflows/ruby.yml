name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # We could move this to it's own workflow that only runs when package.json is updated
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

  test-backend:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      BUNDLE_WITHOUT: development
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.5.3'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 2

      - name: Setup postgres c libpq file
        run: sudo apt-get -yqq install libpq-dev

      - name: Test backend
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
        run: |
           if lsof -Pi :5432 -sTCP:LISTEN -t >/dev/null ; then
            echo "running"
           else
            echo "not running"
           fi
           bin/setup
           bundle exec rspec
      
